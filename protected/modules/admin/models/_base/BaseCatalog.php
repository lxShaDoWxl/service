<?php

/**
 * This is the model base class for the table "catalog".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Catalog".
 *
 * Columns in table "catalog" available as properties of the model,
 * followed by relations of table "catalog" available as properties of the model.
 *
 * @property integer $id
 * @property integer $cid
 * @property string $title
 * @property string $small_description
 * @property string $full_description
 * @property string $title_kz
 * @property string $small_description_kz
 * @property string $full_description_kz
 * @property string $title_en
 * @property string $small_description_en
 * @property string $full_description_en
 * @property integer $isVisible
 * @property string $date
 * @property integer $author
 * @property integer $view
 *
 * @property BookArticle $bookArticle
 * @property Category $c
 * @property Users $author0
 * @property CommentCatalog[] $commentCatalogs
 * @property Favorites[] $favorites
 * @property ItemImage[] $itemImages
 * @property Seo $seo
 */
abstract class BaseCatalog extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'catalog';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Catalog|Catalogs', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('cid, title, small_description, full_description, isVisible, date', 'required'),
			array('cid, isVisible, author, view', 'numerical', 'integerOnly'=>true),
			array('title, title_kz, title_en, date', 'length', 'max'=>255),
			array('small_description_kz, full_description_kz, small_description_en, full_description_en', 'safe'),
			array('title_kz, small_description_kz, full_description_kz, title_en, small_description_en, full_description_en, author, view', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, cid, title, small_description, full_description, title_kz, small_description_kz, full_description_kz, title_en, small_description_en, full_description_en, isVisible, date, author, view', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'bookArticle' => array(self::HAS_ONE, 'BookArticle', 'article_id'),
			'c' => array(self::BELONGS_TO, 'Category', 'cid'),
			'author0' => array(self::BELONGS_TO, 'Users', 'author'),
			'commentCatalogs' => array(self::HAS_MANY, 'CommentCatalog', 'catalog_id'),
			'favorites' => array(self::HAS_MANY, 'Favorites', 'id_article'),
			'itemImages' => array(self::HAS_MANY, 'ItemImage', 'item_id'),
			'seo' => array(self::HAS_ONE, 'Seo', 'id_article'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'cid' => null,
			'title' => Yii::t('app', 'Title'),
			'small_description' => Yii::t('app', 'Small Description'),
			'full_description' => Yii::t('app', 'Full Description'),
			'title_kz' => Yii::t('app', 'Title Kz'),
			'small_description_kz' => Yii::t('app', 'Small Description Kz'),
			'full_description_kz' => Yii::t('app', 'Full Description Kz'),
			'title_en' => Yii::t('app', 'Title En'),
			'small_description_en' => Yii::t('app', 'Small Description En'),
			'full_description_en' => Yii::t('app', 'Full Description En'),
			'isVisible' => Yii::t('app', 'Is Visible'),
			'date' => Yii::t('app', 'Date'),
			'author' => null,
			'view' => Yii::t('app', 'View'),
			'bookArticle' => null,
			'c' => null,
			'author0' => null,
			'commentCatalogs' => null,
			'favorites' => null,
			'itemImages' => null,
			'seo' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('cid', $this->cid);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('small_description', $this->small_description, true);
		$criteria->compare('full_description', $this->full_description, true);
		$criteria->compare('title_kz', $this->title_kz, true);
		$criteria->compare('small_description_kz', $this->small_description_kz, true);
		$criteria->compare('full_description_kz', $this->full_description_kz, true);
		$criteria->compare('title_en', $this->title_en, true);
		$criteria->compare('small_description_en', $this->small_description_en, true);
		$criteria->compare('full_description_en', $this->full_description_en, true);
		$criteria->compare('isVisible', $this->isVisible);
		$criteria->compare('date', $this->date, true);
		$criteria->compare('author', $this->author);
		$criteria->compare('view', $this->view);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}