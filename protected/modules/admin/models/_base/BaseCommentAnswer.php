<?php

/**
 * This is the model base class for the table "comment_answer".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "CommentAnswer".
 *
 * Columns in table "comment_answer" available as properties of the model,
 * followed by relations of table "comment_answer" available as properties of the model.
 *
 * @property integer $id
 * @property integer $id_comment
 * @property integer $author_id
 * @property string $answer
 * @property string $date
 *
 * @property CommentCatalog $idComment
 * @property Users $author
 */
abstract class BaseCommentAnswer extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'comment_answer';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'CommentAnswer|CommentAnswers', $n);
	}

	public static function representingColumn() {
		return 'answer';
	}

	public function rules() {
		return array(
			array('id_comment, author_id, answer, date', 'required'),
			array('id_comment, author_id', 'numerical', 'integerOnly'=>true),
			array('date', 'length', 'max'=>255),
			array('id, id_comment, author_id, answer, date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idComment' => array(self::BELONGS_TO, 'CommentCatalog', 'id_comment'),
			'author' => array(self::BELONGS_TO, 'Users', 'author_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'id_comment' => null,
			'author_id' => null,
			'answer' => Yii::t('app', 'Answer'),
			'date' => Yii::t('app', 'Date'),
			'idComment' => null,
			'author' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('id_comment', $this->id_comment);
		$criteria->compare('author_id', $this->author_id);
		$criteria->compare('answer', $this->answer, true);
		$criteria->compare('date', $this->date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}