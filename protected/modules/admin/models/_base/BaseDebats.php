<?php

/**
 * This is the model base class for the table "debats".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Debats".
 *
 * Columns in table "debats" available as properties of the model,
 * followed by relations of table "debats" available as properties of the model.
 *
 * @property integer $id
 * @property string $title
 * @property string $body
 * @property integer $isVisible
 * @property string $date_start
 * @property string $date_end
 * @property integer $view
 * @property string $img
 * @property string $tag
 *
 * @property CommentsDebat[] $commentsDebats
 * @property ConnectDebat[] $connectDebats
 * @property Seo $seo
 */
abstract class BaseDebats extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'debats';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Debats|Debats', $n);
	}

	public static function representingColumn() {
		return 'title';
	}

	public function rules() {
		return array(
			array('title, body, isVisible, date_start, date_end, img', 'required'),
			array('isVisible, view', 'numerical', 'integerOnly'=>true),
			array('title, date_start, date_end, img, tag', 'length', 'max'=>255),
			array('view, tag', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, title, body, isVisible, date_start, date_end, view, img, tag', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'commentsDebats' => array(self::HAS_MANY, 'CommentsDebat', 'debat_id'),
			'connectDebats' => array(self::HAS_MANY, 'ConnectDebat', 'id_debat'),
			'seo' => array(self::HAS_ONE, 'Seo', 'id_debats'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'title' => Yii::t('app', 'Title'),
			'body' => Yii::t('app', 'Body'),
			'isVisible' => Yii::t('app', 'Is Visible'),
			'date_start' => Yii::t('app', 'Date Start'),
			'date_end' => Yii::t('app', 'Date End'),
			'view' => Yii::t('app', 'View'),
			'img' => Yii::t('app', 'Img'),
			'tag' => Yii::t('app', 'Tag'),
			'commentsDebats' => null,
			'connectDebats' => null,
			'seo' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('title', $this->title, true);
		$criteria->compare('body', $this->body, true);
		$criteria->compare('isVisible', $this->isVisible);
		$criteria->compare('date_start', $this->date_start, true);
		$criteria->compare('date_end', $this->date_end, true);
		$criteria->compare('view', $this->view);
		$criteria->compare('img', $this->img, true);
		$criteria->compare('tag', $this->tag, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}